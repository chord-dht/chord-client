name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: windows
            arch: amd64
          - os: darwin
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Download and extract dist
      run: |
        REPO="chord-dht/chord-frontend"
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/$REPO/releases/latest | grep "browser_download_url.*dist.tar.gz" | cut -d '"' -f 4)
        curl -L -o dist.tar.gz $LATEST_RELEASE
        tar -xzf dist.tar.gz

    - name: Build
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o chord-client
    
    - name: Create release artifact
      run: |
        mkdir -p release
        mv chord-client release/
        mv dist release/
        tar -czf chord-client-${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C release .
    
    - name: Get the current version
      id: get_version
      run: echo ::set-output name=version::$(date +'%Y.%m.%d.%H%M%S')

    - name: Upload release asset
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        name: Release ${{ steps.get_version.outputs.version }}
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false
        files: ./chord-client-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
        generate_release_notes: true